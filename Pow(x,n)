/**
https://leetcode.com/explore/learn/card/recursion-i/256/complexity-analysis/2380/

Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

 

Example 1:

Input: x = 2.00000, n = 10
Output: 1024.00000

**/

class Solution {
    public double myPow(double x, int n) {
       if(n>=0){
           return calPower(x,n);
       }
        else{
            return 1/calPower(x,n);
        }
    }
    private double calPower(double x, int n){
        if(n==0) return 1;
        
        double res=calPower(x,n/2);  
        if(n%2!=0){
            return res*res*x;  //For odd number, need to multiply one more time with same number
        }
      return res*res;  //For even number, this will be the result
    }
}
